<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="P_HostName" elementType="Argument">
            <stringProp name="Argument.name">HostName</stringProp>
            <stringProp name="Argument.value">apim-zee5-qa-ci1-csvc-0001.azure-api.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="p_token" elementType="Argument">
            <stringProp name="Argument.name">p_token</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.value">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwcm9kdWN0X2NvZGUiOiJ6ZWU1QDk3NSIsInBsYXRmb3JtX2NvZGUiOiJXZWJAJCF0Mzg3MTIiLCJpc3N1ZWRBdCI6IjIwMjItMDctMjZUMjA6MDU6NDUuMzkzWiIsInR0bCI6ODY0MDAwMDAsImlhdCI6MTY1ODg2NTk0NX0.KRqRP2ifl8lunMsxnK9CzUMUFaZ0UFMNosXoUaTxdPQ</stringProp>
          </elementProp>
          <elementProp name="p_authtoken" elementType="Argument">
            <stringProp name="Argument.value">Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImU2bF9sZjB4enBhWThXME1wVDNaUHM3aHI4RnhjS2tsOENXQlp6RUpPaUEifQ.eyJ1c2VyX2lkIjoiYzg0M2MwOTctZjgwMS00YjU3LWFjNGUtMTlkNjllODhjNGVkIiwic3lzdGVtIjoiWjUiLCJjdXJyZW50X2NvdW50cnkiOiJJTiIsInJlZ2lzdHJhdGlvbl9jb3VudHJ5IjoiSU4iLCJhY3RpdmF0aW9uX2RhdGUiOiIyMDIyLTExLTE2VDExOjQxOjM4LjY0MFoiLCJhY3RpdmF0ZWQiOnRydWUsImNyZWF0ZWRfZGF0ZSI6IjIwMjItMTEtMTZUMTE6NDA6NDkuODIwWiIsInN1YiI6IkM4NDNDMDk3LUY4MDEtNEI1Ny1BQzRFLTE5RDY5RTg4QzRFRCIsImRldmljZV9pZCI6InF3ZSIsImlkcCI6ImxvY2FsIiwiY2xpZW50X2lkIjoicmVmcmVzaF90b2tlbiIsImF1ZCI6WyJ1c2VyYXBpIiwic3Vic2NyaXB0aW9uYXBpIiwicHJvZmlsZWFwaSJdLCJzY29wZSI6WyJ1c2VyYXBpIiwic3Vic2NyaXB0aW9uYXBpIiwicHJvZmlsZWFwaSJdLCJhbXIiOlsiZGVsZWdhdGlvbiJdLCJzdWJzY3JpcHRpb25zIjoiW3tcImlkXCI6XCJhN2U0ODVmMy02ODI0LTQ3NTktYTFkMS1lYjIwMzUyODU3MzhcIixcInVzZXJfaWRcIjpcImM4NDNjMDk3LWY4MDEtNGI1Ny1hYzRlLTE5ZDY5ZTg4YzRlZFwiLFwiaWRlbnRpZmllclwiOlwiQ1JNXCIsXCJzdWJzY3JpcHRpb25fcGxhblwiOntcImlkXCI6XCIwLTExLTMyNDFcIixcImFzc2V0X3R5cGVcIjoxMSxcInN1YnNjcmlwdGlvbl9wbGFuX3R5cGVcIjpcIlNWT0RcIixcInRpdGxlXCI6XCJQcmVtaXVtIDRrXCIsXCJvcmlnaW5hbF90aXRsZVwiOlwiUHJlbWl1bSA0a1wiLFwic3lzdGVtXCI6XCJaRUU1XCIsXCJkZXNjcmlwdGlvblwiOlwiUHJlbWl1bSA0a1wiLFwiYmlsbGluZ19jeWNsZV90eXBlXCI6XCJkYXlzXCIsXCJiaWxsaW5nX2ZyZXF1ZW5jeVwiOjM2NSxcInByaWNlXCI6MTQ5OSxcImN1cnJlbmN5XCI6XCJJTlJcIixcImNvdW50cnlcIjpcIklOXCIsXCJjb3VudHJpZXNcIjpbXCJJTlwiXSxcInN0YXJ0XCI6XCIyMDIyLTA5LTA2VDAwOjAwOjAwWlwiLFwiZW5kXCI6XCIyMDIzLTEyLTMxVDEyOjQ3OjAwWlwiLFwib25seV9hdmFpbGFibGVfd2l0aF9wcm9tb3Rpb25cIjp0cnVlLFwicmVjdXJyaW5nXCI6ZmFsc2UsXCJwYXltZW50X3Byb3ZpZGVyc1wiOlt7XCJuYW1lXCI6XCJKdXNQYXlcIn0se1wibmFtZVwiOlwiUGF5dG1RUlwifSx7XCJuYW1lXCI6XCJRd2lrQ2lsdmVyIEdpZnQgY2FyZFwifSx7XCJuYW1lXCI6XCJBbWF6b25JQVBcIixcInByb2R1Y3RfcmVmZXJlbmNlXCI6XCJ6ZWU1XzRrX3BhY2tfaW5fMTJtXCJ9LHtcIm5hbWVcIjpcIlBheXRtUVJVUElcIn0se1wibmFtZVwiOlwiQW1hem9uUGF5XCJ9LHtcIm5hbWVcIjpcIlBsYXkgU3RvcmVcIixcInByb2R1Y3RfcmVmZXJlbmNlXCI6XCJ6ZWU1XzF5XzRrX3N2b2RfYXJfaW5cIn1dLFwicHJvbW90aW9uc1wiOltdLFwiYXNzZXRfdHlwZXNcIjpbMCw2LDldLFwiYXNzZXRfaWRzXCI6W1wiXCJdLFwiYnVzaW5lc3NfdHlwZVwiOlwiZnJlZVwiLFwiYmlsbGluZ190eXBlXCI6XCJwcmVtaXVtXCIsXCJudW1iZXJfb2Zfc3VwcG9ydGVkX2RldmljZXNcIjo0LFwibW92aWVfYXVkaW9fbGFuZ3VhZ2VzXCI6W10sXCJ0dl9zaG93X2F1ZGlvX2xhbmd1YWdlc1wiOltdLFwiY2hhbm5lbF9hdWRpb19sYW5ndWFnZXNcIjpbXSxcImR1cmF0aW9uX3RleHRcIjpcIjE2OTlcIixcInZhbGlkX2Zvcl9hbGxfY291bnRyaWVzXCI6ZmFsc2UsXCJhbGxvd2VkX3BsYXliYWNrX2R1cmF0aW9uXCI6MCxcIm9mZmVyX2lkXCI6MCxcImNhdGVnb3J5XCI6XCJkZWZhdWx0XCJ9LFwic3Vic2NyaXB0aW9uX3N0YXJ0XCI6XCIyMDIyLTEyLTA1VDA5OjI5OjE5Ljc5N1pcIixcInN1YnNjcmlwdGlvbl9lbmRcIjpcIjIwMjMtMTItMDVUMjM6NTk6NTlaXCIsXCJzdGF0ZVwiOlwiYWN0aXZhdGVkXCIsXCJyZWN1cnJpbmdfZW5hYmxlZFwiOmZhbHNlLFwicGF5bWVudF9wcm92aWRlclwiOlwiY3JtXCIsXCJmcmVlX3RyaWFsXCI6bnVsbCxcImNyZWF0ZV9kYXRlXCI6XCIyMDIyLTEyLTA1VDA5OjI5OjE5LjhaXCIsXCJjb3VudHJ5XCI6XCJJTlwiLFwiYWRkaXRpb25hbFwiOnt9LFwiYWxsb3dlZF9iaWxsaW5nX2N5Y2xlc1wiOjAsXCJ1c2VkX2JpbGxpbmdfY3ljbGVzXCI6MH1dIiwiYWNjZXNzX3Rva2VuX3R5cGUiOiJIaWdoUHJpdmlsZWdlIiwidmVyc2lvbiI6MSwidXNlcl90eXBlIjoiUmVnaXN0ZXJlZCIsInVzZXJfZW1haWwiOiJhZHN0ZWNodGVzdGluZzNAbWFpbG5lc2lhLmNvbSIsImF1dGhfdGltZSI6MTY3MjMxMzI1NiwiZXhwIjoxNjg4MDgxMjU2LCJpYXQiOjE2NzIzMTMyNTYsImlzcyI6Imh0dHBzOi8vemVlNS11YXBpLXFjLWFsYi56ZWU1LmJlIiwibmJmIjoxNjcyMzEzMjU2fQ.QEtdYhToIjQK53Sti1XSu4x9jo0Y0B5KOqsRn-r5HGxoJnud0vtHuWoL6K3zQUBYf4Q0aGWl6cirXnmpinBpEI05fofWhmhOFxEP8c33Q8tSd7tyjiXJ8XnyZ61dyIQp-UHWlG7zzPhWGTGEB7iJqa-cuSqMtGLXDbGvoS_Gu245o_ZbdIxXNrB42-_5VWD--q63js3uo-P-_N-iyxX_UMWJ_C-b3ItKNbewgB33oARraMcEZvdd9Lkq9tcRGVQVcokrCUm0-53o7gwQj-xvOu1zkkr0REMXE4KATDcV4sMhZuP2snQxYlhJC7Pg1Khm_cqHZXltx2YMJzN-_BwPhQ</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.name">p_authtoken</stringProp>
          </elementProp>
          <elementProp name="P_DeviceID" elementType="Argument">
            <stringProp name="Argument.name">P_DeviceID</stringProp>
            <stringProp name="Argument.value">8C5D58CF-5E65-4DD9-B23E-D7E66D7E32B4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_esk" elementType="Argument">
            <stringProp name="Argument.name">P_esk</stringProp>
            <stringProp name="Argument.value">OEM1RDU4Q0YtNUU2NS00REQ5LUIyM0UtRDdFNjZEN0UzMkI0X191eWg1bENYYlJ1R2JEZ2N0RjlHYzVadThXbkY1U2xkRF9fMTY2OTAwNzYyNA==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_ClientSecret" elementType="Argument">
            <stringProp name="Argument.name">P_ClientSecret</stringProp>
            <stringProp name="Argument.value">DgOfsq7oOP1NmlOeUPDKpiBymD0c0UjxJO2gvwUWO30=</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_Cookie" elementType="Argument">
            <stringProp name="Argument.name">P_Cookie</stringProp>
            <stringProp name="Argument.value">AWSALB=i4FrLO1SqH6j1b/ReGBSgv9f/KaxZ/K3NMTZWpcdDBWj09y87lHbX0F5w+6+Dbfagypl3wmf418243+ADtp7Xg/Em9JPOoyaYNasJm+zWL/T/rQp2RkqxYaB+us4; AWSALBCORS=i4FrLO1SqH6j1b/ReGBSgv9f/KaxZ/K3NMTZWpcdDBWj09y87lHbX0F5w+6+Dbfagypl3wmf418243+ADtp7Xg/Em9JPOoyaYNasJm+zWL/T/rQp2RkqxYaB+us4</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="P_cmsAuthorization" elementType="Argument">
            <stringProp name="Argument.name">P_cmsAuthorization</stringProp>
            <stringProp name="Argument.value">06e773ab-6088-4f9b-9e4e-17f1bfd6125c</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Display ads" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="S23_TokenGeneration_T01_GenerateToken" enabled="true">
          <stringProp name="filename">C:/Users/v-rakshithn/Desktop/S02_TokenVerification/S23_TokenGeneration_T01_GenerateToken.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">P_T01_UserID,P_T01_UserMobile,P_T01_DeviceID,P_T01_Issuer,P_T01_sub,P_T01_email_verified,P_T01_activation_date,P_T01_created_date,P_T01_CTTL,P_T01_ClientID,P_T01_SlidingRefreshTokenLifetime,P_T01_AccessTokenLifeTime,P_T01_access_token_type </stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">true</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="S01_TokenGeneration_T01_GenerateToken" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="S01_TokenGeneration_T01_GenerateToken" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;payload&quot;: {&#xd;
    &quot;user_id&quot;: &quot;${P_T01_UserID}&quot;,&#xd;
    &quot;system&quot;: &quot;Z5&quot;,&#xd;
    &quot;current_country&quot;: &quot;IN&quot;,&#xd;
    &quot;registration_country&quot;: &quot;IN&quot;,&#xd;
    &quot;user_email&quot;: &quot;&quot;,&#xd;
    &quot;email_verified&quot;: ${P_T01_email_verified},&#xd;
    &quot;user_mobile&quot;: &quot;${P_T01_UserMobile}&quot;,&#xd;
    &quot;mobile_verified&quot;: true,&#xd;
    &quot;activation_date&quot;: &quot;${P_T01_activation_date}&quot;,&#xd;
    &quot;activated&quot;: true,&#xd;
    &quot;created_date&quot;: &quot;${P_T01_created_date}&quot;,&#xd;
    &quot;subscriptions&quot;: &quot;[]&quot;,&#xd;
    &quot;device_id&quot;: &quot;${P_T01_DeviceID}&quot;,&#xd;
    &quot;cttl&quot;: ${P_T01_CTTL},&#xd;
    &quot;client_id&quot;: &quot;${P_T01_ClientID}&quot;,&#xd;
    &quot;amr&quot;: [&#xd;
      &quot;delegation&quot;&#xd;
    ],&#xd;
    &quot;scope&quot;: [&#xd;
      &quot;userapi&quot;,&#xd;
      &quot;subscriptionapi&quot;,&#xd;
      &quot;profileapi&quot;&#xd;
    ],&#xd;
    &quot;Audiences&quot;: [&#xd;
      &quot;userapi&quot;,&#xd;
      &quot;subscriptionapi&quot;,&#xd;
      &quot;profileapi&quot;&#xd;
    ],&#xd;
    &quot;Issuer&quot;: &quot;${P_T01_Issuer}&quot;,&#xd;
    &quot;SlidingRefreshTokenLifetime&quot;: ${P_T01_SlidingRefreshTokenLifetime},&#xd;
    &quot;AccessTokenLifeTime&quot;: ${P_T01_AccessTokenLifeTime},&#xd;
    &quot;sub&quot;: &quot;${P_T01_sub}&quot;,&#xd;
    &quot;access_token_type&quot;: &quot;${P_T01_access_token_type}&quot;&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${P_HostName}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/usertokenservice/token/generate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">Userapi</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Client-Secret</stringProp>
                  <stringProp name="Header.value">${P_ClientSecret}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">device_id</stringProp>
                  <stringProp name="Header.value">${P_DeviceID}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">esk</stringProp>
                  <stringProp name="Header.value">${P_esk}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">${P_Cookie}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings"/>
              <stringProp name="Assertion.custom_message">200</stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="C_Token" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
              <stringProp name="RegexExtractor.refname">C_Token</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;token&quot;:&quot;(.*?)&quot;,</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">***NOT FOUND***</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="00_v3_AdTech - Displayads" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="00_v3_AdTech - Displayads" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">${p_state}</stringProp>
                </elementProp>
                <elementProp name="country" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">country</stringProp>
                  <stringProp name="Argument.value">${p_country}</stringProp>
                </elementProp>
                <elementProp name="platform_name" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">platform_name</stringProp>
                  <stringProp name="Argument.value">${p_platform_service}</stringProp>
                </elementProp>
                <elementProp name="user_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">user_type</stringProp>
                  <stringProp name="Argument.value">${p_user_type}</stringProp>
                </elementProp>
                <elementProp name="ppid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">ppid</stringProp>
                  <stringProp name="Argument.value">${p_ppid}</stringProp>
                </elementProp>
                <elementProp name="uid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">uid</stringProp>
                  <stringProp name="Argument.value">${p_uid}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gender" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">gender</stringProp>
                  <stringProp name="Argument.value">${p_gender}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="age_group" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">age_group</stringProp>
                  <stringProp name="Argument.value">${p_age_group}</stringProp>
                </elementProp>
                <elementProp name="content_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">content_id</stringProp>
                  <stringProp name="Argument.value">${p_content_id}</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${P_HostName}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">Adtech/singlePlayback/displayAds/v3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">authority</stringProp>
                  <stringProp name="Header.value">spapi.zee5.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept-language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">origin</stringProp>
                  <stringProp name="Header.value">https://newpwa.zee5.com</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">referer</stringProp>
                  <stringProp name="Header.value">https://newpwa.zee5.com/</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">sec-fetch-site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">user-agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-access-token</stringProp>
                  <stringProp name="Header.value">${p_token}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">${p_authtoken}</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Cookie</stringProp>
                  <stringProp name="Header.value">dtCookie=v_4_srv_5_sn_BC6122BDDA0690131239186DDE586F46_perc_100000_ol_0_mul_1_app-3Aea7c4b59f27d43eb_1_rcs-3Acss_0</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">34</intProp>
            </ResponseAssertion>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="displayads" enabled="true">
              <stringProp name="filename">C:\Users\v-rakshithn\Desktop\u.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">p_state,p_country,p_platform_service,p_user_type,p_ppid,p_uid,p_gender,p_age_group,p_content_id</stringProp>
              <boolProp name="ignoreFirstLine">true</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">true</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
            </CSVDataSet>
            <hashTree/>
            <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
            <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="TestData_Displayads" enabled="false">
              <stringProp name="filename">C:/Users/v-vgudur/Documents/JMeter Works/displayads.csv</stringProp>
              <stringProp name="fileEncoding"></stringProp>
              <stringProp name="variableNames">,</stringProp>
              <boolProp name="ignoreFirstLine">false</boolProp>
              <stringProp name="delimiter">,</stringProp>
              <boolProp name="quotedData">false</boolProp>
              <boolProp name="recycle">true</boolProp>
              <boolProp name="stopThread">false</boolProp>
              <stringProp name="shareMode">shareMode.all</stringProp>
              <stringProp name="TestPlan.comments">Test data sheet for the Displayads endpoint</stringProp>
            </CSVDataSet>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
